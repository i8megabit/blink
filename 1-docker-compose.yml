version: '3.8'

# üöÄ –ü–ï–†–í–´–ô –¢–ï–°–¢–û–í–´–ô –ö–û–ú–ü–û–£–ó reLink
# –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è MacBook Pro M4 16GB

services:
  # üê≥ –ë–ê–ó–û–í–´–ï –°–ï–†–í–ò–°–´
  redis:
    image: redis:7-alpine
    container_name: relink-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    environment:
      - REDIS_PASSWORD=relink_redis_pass
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: relink-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      POSTGRES_DB: relink_db
      POSTGRES_USER: seo_user
      POSTGRES_PASSWORD: seo_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    networks:
      - relink-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U seo_user -d relink_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üß† AI/ML –°–ï–†–í–ò–°–´
  ollama:
    image: ollama/ollama:latest
    container_name: relink-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  chromadb:
    image: chromadb/chroma:latest
    container_name: relink-chromadb
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
      - ANONYMIZED_TELEMETRY=False
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üîß –ú–ò–ö–†–û–°–ï–†–í–ò–°–´
  router:
    build:
      context: ./router
      dockerfile: Dockerfile
    container_name: relink-router
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=router
      - SERVICE_PORT=8001
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@postgres:5432/relink_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - CHROMADB_URL=http://chromadb:8000
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  benchmark:
    build:
      context: ./benchmark
      dockerfile: Dockerfile
    container_name: relink-benchmark
    ports:
      - "8002:8002"
    environment:
      - SERVICE_NAME=benchmark
      - SERVICE_PORT=8002
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@postgres:5432/relink_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - ROUTER_URL=http://router:8001
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      router:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  relink:
    build:
      context: ./relink
      dockerfile: Dockerfile
    container_name: relink-seo
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=relink
      - SERVICE_PORT=8003
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@postgres:5432/relink_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - ROUTER_URL=http://router:8001
      - CHROMADB_URL=http://chromadb:8000
      - BENCHMARK_URL=http://benchmark:8002
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      router:
        condition: service_healthy
      benchmark:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: relink-backend
    ports:
      - "8004:8004"
    environment:
      - SERVICE_NAME=backend
      - SERVICE_PORT=8004
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@postgres:5432/relink_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - ROUTER_URL=http://router:8001
      - CHROMADB_URL=http://chromadb:8000
      - RELINK_URL=http://relink:8003
      - BENCHMARK_URL=http://benchmark:8002
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      router:
        condition: service_healthy
      relink:
        condition: service_healthy
      benchmark:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üé® –§–†–û–ù–¢–ï–ù–î
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: relink-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8004
      - VITE_ROUTER_URL=http://localhost:8001
      - VITE_RELINK_URL=http://localhost:8003
      - VITE_BENCHMARK_URL=http://localhost:8002
      - VITE_OLLAMA_URL=http://localhost:11434
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
      router:
        condition: service_healthy
      relink:
        condition: service_healthy
      benchmark:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì
  monitoring:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    container_name: relink-monitoring
    ports:
      - "8005:8005"
    environment:
      - SERVICE_NAME=monitoring
      - SERVICE_PORT=8005
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@postgres:5432/relink_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - BACKEND_URL=http://backend:8004
      - ROUTER_URL=http://router:8001
      - RELINK_URL=http://relink:8003
      - BENCHMARK_URL=http://benchmark:8002
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
  testing:
    build:
      context: ./testing
      dockerfile: Dockerfile
    container_name: relink-testing
    ports:
      - "8006:8006"
    environment:
      - SERVICE_NAME=testing
      - SERVICE_PORT=8006
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@postgres:5432/relink_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - BACKEND_URL=http://backend:8004
      - ROUTER_URL=http://router:8001
      - RELINK_URL=http://relink:8003
      - BENCHMARK_URL=http://benchmark:8002
      - FRONTEND_URL=http://frontend:3000
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ollama_data:
    driver: local
  chromadb_data:
    driver: local

networks:
  relink-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 