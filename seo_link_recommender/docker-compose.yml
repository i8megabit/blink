services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - OLLAMA_URL=http://ollama:11434/api/generate
      - OLLAMA_MODEL=qwen2.5:7b-optimized
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/v1/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - db
      - ollama

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: seo_user
      POSTGRES_PASSWORD: seo_pass
      POSTGRES_DB: seo_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./scripts:/scripts
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_REQUEST_TIMEOUT=900s
      - OLLAMA_MAX_LOADED_MODELS=1
      - OLLAMA_NUM_PARALLEL=1
      - OLLAMA_MAX_QUEUE=1
      - OLLAMA_CONCURRENT_REQUESTS=1
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=*
      - OLLAMA_LOAD_TIMEOUT=900s
      - OLLAMA_RUNNER_TIMEOUT=900s
      - OLLAMA_MODELS=/root/.ollama/models
      - OLLAMA_DEBUG=1
      - OLLAMA_MAX_TOKENS=2048
      - OLLAMA_CONTEXT_LENGTH=2048
      - OLLAMA_BATCH_SIZE=128
      - OLLAMA_TEMPERATURE=0.7
      - OLLAMA_TOP_P=0.9
      - OLLAMA_REPEAT_PENALTY=1.1
      - OLLAMA_SEED=42
      - OLLAMA_PRELOAD_MODEL=qwen2.5:7b-optimized
      - OLLAMA_WORKERS=1
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "ollama serve & 
      sleep 60 && 
      echo 'Подтягиваем модель...' && 
      ollama pull qwen2.5:7b && 
      echo 'Модель загружена, настраиваем параметры...' && 
      ollama create qwen2.5:7b-optimized -f /dev/stdin <<EOF
      FROM qwen2.5:7b
      PARAMETER num_ctx 2048
      PARAMETER num_batch 128
      PARAMETER num_thread 2
      PARAMETER num_gpu 0
      PARAMETER num_predict 1024
      PARAMETER temperature 0.7
      PARAMETER top_p 0.9
      PARAMETER repeat_penalty 1.1
      PARAMETER seed 42
      PARAMETER mirostat 1
      PARAMETER mirostat_eta 0.1
      PARAMETER mirostat_tau 5.0
      EOF
      echo 'Оптимизированная модель создана!' &&
      echo 'Предзагружаем модель...' &&
      ollama run qwen2.5:7b-optimized 'Привет' &&
      echo 'Модель готова к работе!' &&
      wait"
    healthcheck:
      test: ["CMD", "curl", "-f", "-m", "30", "http://localhost:11434/api/tags"]
      interval: 60s
      timeout: 45s
      retries: 10
      start_period: 600s
    deploy:
      resources:
        limits:
          memory: 10G
          cpus: '4.0'
        reservations:
          memory: 6G
          cpus: '2.0'
    ulimits:
      memlock:
        soft: -1
        hard: -1

volumes:
  postgres_data:
  ollama_data:
