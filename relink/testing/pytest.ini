[tool:pytest]
# Основные настройки pytest
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    -n auto
    --dist=loadfile
    --html=reports/pytest_report.html
    --self-contained-html
    --junitxml=reports/junit.xml
    --reuse-db
    --create-db
    --mock-use-standalone-module
    --profile
    --profile-svg
    --pdb
    --pdbcls=IPython.terminal.debugger:Pdb
    --cache-clear
    --cache-show
    --lf
    --ff
    --nf
    -x
    --maxfail=10
    -s
    --capture=no
    --showlocals
    --timeout=300
    --timeout-method=thread
    --isolated
    --forked
    --strict-config
    --strict-markers
    --disable-warnings
    --benchmark-only
    --benchmark-skip
    --benchmark-min-rounds=100
    --metrics
    --metrics-format=json
    --security-check
    --bandit
    --doctest-modules
    --doctest-report=udiff
    --compat-mode
    --legacy-mode
    --junitxml=test-results.xml
    --cov-report=xml:coverage.xml
    --cov-report=html:coverage-html
    --reuse-db
    --nomigrations
    --keepdb
    --no-cov
    --no-html
    --no-xml
    --quiet

# Маркеры для категоризации тестов
markers =
    unit: Unit тесты
    integration: Integration тесты
    performance: Performance тесты
    slow: Медленные тесты
    api: API тесты
    database: Тесты базы данных
    async: Асинхронные тесты
    smoke: Smoke тесты
    regression: Regression тесты

# Фильтры для исключения тестов
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Настройки для coverage
[coverage:run]
source = app
omit = 
    */tests/*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Настройки для asyncio
asyncio_mode = auto

# Настройки для логирования
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S 