#!/bin/bash

echo "๐ ะะพะฝะธัะพัะธะฝะณ ะทะฐะฟััะบะฐ Ollama..."
echo "โฐ $(date)"
echo ""

# ะคัะฝะบัะธั ะดะปั ะฟัะพะฒะตัะบะธ ััะฐัััะฐ
check_status() {
    local container_name="relink-ollama-1"
    
    echo "๐ ะกัะฐััั ะบะพะฝัะตะนะฝะตัะฐ:"
    docker ps --filter "name=$container_name" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    echo ""
    
    echo "๐ ะะพัะปะตะดะฝะธะต 10 ัััะพะบ ะปะพะณะพะฒ:"
    docker logs $container_name --tail 10 2>/dev/null || echo "โ ะะพะฝัะตะนะฝะตั ะฝะต ะฝะฐะนะดะตะฝ"
    echo ""
    
    # ะัะพะฒะตัะบะฐ API
    echo "๐ ะัะพะฒะตัะบะฐ API:"
    curl -s -m 5 http://localhost:11434/api/tags >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "โ API ะดะพัััะฟะฝะพ"
        # ะะพะปััะฐะตะผ ัะฟะธัะพะบ ะผะพะดะตะปะตะน
        models=$(curl -s -m 5 http://localhost:11434/api/tags | grep -o '"name":"[^"]*"' | sed 's/"name":"\([^"]*\)"/\1/' | tr '\n' ', ')
        echo "๐ ะะพะดะตะปะธ: $models"
    else
        echo "โ API ะฝะตะดะพัััะฟะฝะพ"
    fi
    echo ""
}

# ะะพะฝะธัะพัะธะฝะณ ะฒ ัะธะบะปะต
counter=0
max_checks=30  # 5 ะผะธะฝัั (30 * 10 ัะตะบัะฝะด)

while [ $counter -lt $max_checks ]; do
    counter=$((counter + 1))
    echo "๐ ะัะพะฒะตัะบะฐ $counter/$max_checks"
    
    check_status
    
    # ะัะพะฒะตััะตะผ ะณะพัะพะฒะฝะพััั ะผะพะดะตะปะธ
    if curl -s -m 5 http://localhost:11434/api/tags | grep -q "qwen2.5:7b-optimized"; then
        echo "๐ ะะพะดะตะปั qwen2.5:7b-optimized ะณะพัะพะฒะฐ!"
        
        # ะัััััะน ัะตัั ะณะตะฝะตัะฐัะธะธ
        echo "๐งช ะขะตัั ะณะตะฝะตัะฐัะธะธ..."
        response=$(curl -s -m 30 -X POST http://localhost:11434/api/generate \
            -H "Content-Type: application/json" \
            -d '{"model":"qwen2.5:7b-optimized","prompt":"ะกะบะฐะถะธ ะฟัะธะฒะตั","stream":false,"options":{"num_predict":5}}')
        
        if [ $? -eq 0 ] && [ ! -z "$response" ]; then
            echo "โ ะะตะฝะตัะฐัะธั ัะฐะฑะพัะฐะตั!"
            echo "๐ ะัะฒะตั: $(echo $response | grep -o '"response":"[^"]*"' | sed 's/"response":"\([^"]*\)"/\1/')"
        else
            echo "โ ะะตะฝะตัะฐัะธั ะฝะต ัะฐะฑะพัะฐะตั"
        fi
        
        echo ""
        echo "๐ Ollama ะณะพัะพะฒ ะบ ัะฐะฑะพัะต!"
        exit 0
    fi
    
    echo "โณ ะะถะธะดะฐะฝะธะต 10 ัะตะบัะฝะด..."
    sleep 10
    echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
done

echo "โฐ ะัะตะผั ะพะถะธะดะฐะฝะธั ะธััะตะบะปะพ"
echo "โ ะะพะทะผะพะถะฝั ะฟัะพะฑะปะตะผั ั ะทะฐะฟััะบะพะผ Ollama"
exit 1 