# ========================================
# SEO Link Recommender - Makefile
# ========================================

.PHONY: help version get-version set-version tag-version release-version build test clean docs version-update version-sync

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON := python3
VERSION_MANAGER := scripts/version_manager.py

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN := \033[0;32m
YELLOW := \033[1;33m
RED := \033[0;31m
NC := \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)üöÄ SEO Link Recommender - Makefile$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-20s$(NC) %s\n", $$1, $$2}'

# ========================================
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏—è–º–∏ (SemVer 2.0)
# ========================================

.PHONY: version version-current version-bump version-release version-prerelease version-set version-validate version-changelog

version: version-current
	@echo "üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏"

version-current:
	@echo "üîç –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è:"
	@$(PYTHON) $(VERSION_MANAGER) current

version-bump:
	@echo "üöÄ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏..."
	@if [ -z "$(TYPE)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ TYPE=major|minor|patch"; \
		exit 1; \
	fi
	@$(PYTHON) $(VERSION_MANAGER) bump --type $(TYPE)

version-release:
	@echo "üéâ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞..."
	@$(PYTHON) $(VERSION_MANAGER) release --type $(or $(TYPE),patch)

version-prerelease:
	@echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ prerelease..."
	@if [ -z "$(NAME)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ NAME=–∏–º—è_prerelease"; \
		exit 1; \
	fi
	@$(PYTHON) $(VERSION_MANAGER) prerelease --prerelease $(NAME) --type $(or $(TYPE),rc)

version-set:
	@echo "‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ—Ä—Å–∏–∏..."
	@if [ -z "$(VERSION)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ VERSION=X.Y.Z"; \
		exit 1; \
	fi
	@$(PYTHON) $(VERSION_MANAGER) set --version $(VERSION)

version-validate:
	@echo "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–µ—Ä—Å–∏–∏..."
	@if [ -z "$(VERSION)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ VERSION=X.Y.Z"; \
		exit 1; \
	fi
	@$(PYTHON) $(VERSION_MANAGER) validate --version $(VERSION)

version-changelog:
	@echo "üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ changelog..."
	@if [ -z "$(CHANGES)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ CHANGES=\"–∏–∑–º–µ–Ω–µ–Ω–∏–µ1 –∏–∑–º–µ–Ω–µ–Ω–∏–µ2\""; \
		exit 1; \
	fi
	@$(PYTHON) $(VERSION_MANAGER) changelog --changes $(CHANGES)

# ========================================
# –°–±–æ—Ä–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# ========================================

build: ## –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
	@echo "$(GREEN)üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker-compose build

build-parallel: ## –°–±–æ—Ä–∫–∞ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
	@echo "$(GREEN)üî® –°–±–æ—Ä–∫–∞ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...$(NC)"
	docker-compose -f docker-compose.parallel.yml build

test: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@cd backend && python3 -m pytest -v

test-frontend: ## –¢–µ—Å—Ç—ã frontend
	@echo "$(GREEN)üß™ –¢–µ—Å—Ç—ã frontend...$(NC)"
	@cd frontend && npm test

test-e2e: ## E2E —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üß™ E2E —Ç–µ—Å—Ç—ã...$(NC)"
	@cd frontend && npm run test:e2e

# ========================================
# –ó–∞–ø—É—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
# ========================================

up: ## –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	docker-compose up -d

up-parallel: ## –ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...$(NC)"
	./run_parallel.sh

down: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	docker-compose down

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	docker-compose restart

# ========================================
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏
# ========================================

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üìã –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	docker-compose logs -f

logs-backend: ## –õ–æ–≥–∏ backend
	@echo "$(GREEN)üìã –õ–æ–≥–∏ backend...$(NC)"
	docker-compose logs -f backend

logs-frontend: ## –õ–æ–≥–∏ frontend
	@echo "$(GREEN)üìã –õ–æ–≥–∏ frontend...$(NC)"
	docker-compose logs -f frontend

logs-ollama: ## –õ–æ–≥–∏ Ollama
	@echo "$(GREEN)üìã –õ–æ–≥–∏ Ollama...$(NC)"
	docker-compose logs -f ollama

status: ## –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	docker-compose ps

stats: ## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
	@echo "$(GREEN)üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...$(NC)"
	docker stats

# ========================================
# –û—á–∏—Å—Ç–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
# ========================================

clean: ## –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤
	@echo "$(GREEN)üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤...$(NC)"
	docker system prune -f
	docker volume prune -f

clean-all: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è –æ–±—Ä–∞–∑—ã)
	@echo "$(GREEN)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...$(NC)"
	docker system prune -a -f
	docker volume prune -f

clean-data: ## –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–ë–î, –∫—ç—à)
	@echo "$(GREEN)üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	rm -rf postgres_data chroma_db ollama_models

# ========================================
# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
# ========================================

docs: ## –û—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "$(GREEN)üìö –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...$(NC)"
	@if command -v open >/dev/null 2>&1; then \
		open DOCUMENTATION.md; \
	elif command -v xdg-open >/dev/null 2>&1; then \
		xdg-open DOCUMENTATION.md; \
	else \
		echo "$(YELLOW)üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: DOCUMENTATION.md$(NC)"; \
	fi

# ========================================
# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
# ========================================

dev-setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@cd backend && pip install -r requirements.txt
	@cd frontend && npm install

dev-backend: ## –ó–∞–ø—É—Å–∫ backend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ backend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@cd backend && python3 -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

dev-frontend: ## –ó–∞–ø—É—Å–∫ frontend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ frontend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@cd frontend && npm run dev

# ========================================
# –ü—Ä–æ–≤–µ—Ä–∫–∏
# ========================================

check: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@echo "$(YELLOW)–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...$(NC)"
	@docker --version
	@echo "$(YELLOW)–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose...$(NC)"
	@docker-compose --version
	@echo "$(YELLOW)–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤...$(NC)"
	@lsof -i :3000 -i :8000 -i :11434 || echo "$(GREEN)‚úÖ –ü–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã$(NC)"

health: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@curl -s http://localhost:8000/api/v1/health || echo "$(RED)‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@curl -s http://localhost:11434/api/tags || echo "$(RED)‚ùå Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

# ========================================
# –£—Ç–∏–ª–∏—Ç—ã
# ========================================

shell-backend: ## Shell –≤ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "$(GREEN)üêö Shell –≤ backend...$(NC)"
	docker-compose exec backend /bin/bash

shell-frontend: ## Shell –≤ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "$(GREEN)üêö Shell –≤ frontend...$(NC)"
	docker-compose exec frontend /bin/sh

shell-ollama: ## Shell –≤ Ollama –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "$(GREEN)üêö Shell –≤ Ollama...$(NC)"
	docker-compose exec ollama /bin/sh

# ========================================
# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
# ========================================

quick-start: ## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (—Å–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫)
	@echo "$(GREEN)‚ö° –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç...$(NC)"
	@make build
	@make up
	@echo "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(YELLOW)üåê Frontend: http://localhost:3000$(NC)"
	@echo "$(YELLOW)üîß Backend: http://localhost:8000$(NC)"
	@echo "$(YELLOW)üß† Ollama: http://localhost:11434$(NC)"

quick-start-parallel: ## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
	@echo "$(GREEN)‚ö° –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...$(NC)"
	@make build-parallel
	@make up-parallel
	@echo "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!$(NC)"
	@echo "$(YELLOW)üåê Classic Frontend: http://localhost:3000$(NC)"
	@echo "$(YELLOW)‚ö° Vite Frontend: http://localhost:3001$(NC)"
	@echo "$(YELLOW)üîß Backend: http://localhost:8000$(NC)"
	@echo "$(YELLOW)üß† Ollama: http://localhost:11434$(NC)"

# ========================================
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# ========================================

info: ## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
	@echo "$(GREEN)üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ$(NC)"
	@echo "$(YELLOW)–ù–∞–∑–≤–∞–Ω–∏–µ:$(NC) SEO Link Recommender"
	@make get-version
	@echo "$(YELLOW)–ê–≤—Ç–æ—Ä:$(NC) –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "$(YELLOW)–õ–∏—Ü–µ–Ω–∑–∏—è:$(NC) MIT"
	@echo "$(YELLOW)GitHub:$(NC) https://github.com/your-repo"
	@echo "$(YELLOW)–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:$(NC) DOCUMENTATION.md" 