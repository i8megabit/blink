#!/bin/bash

# üöÄ –§–ê–ô–õ–û–í–´–ô –ú–û–ù–ò–¢–û–† - –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò
# –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[FILE-WATCHER]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    if ! command -v inotifywait &> /dev/null; then
        error "inotifywait –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ inotify-tools:"
        echo "  Ubuntu/Debian: sudo apt-get install inotify-tools"
        echo "  macOS: brew install fswatch"
        echo "  CentOS/RHEL: sudo yum install inotify-tools"
        exit 1
    fi
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ git
get_git_root() {
    git rev-parse --show-toplevel
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
get_watch_directories() {
    local git_root=$(get_git_root)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    local dirs=(
        "$git_root/frontend/src"
        "$git_root/backend/app"
        "$git_root/llm_tuning/app"
        "$git_root/testing/app"
        "$git_root/monitoring/app"
        "$git_root/scripts"
        "$git_root/config"
        "$git_root/docs"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    local existing_dirs=()
    for dir in "${dirs[@]}"; do
        if [ -d "$dir" ]; then
            existing_dirs+=("$dir")
        fi
    done
    
    echo "${existing_dirs[@]}"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è
get_exclude_patterns() {
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    local patterns=(
        "*.log"
        "*.tmp"
        "*.temp"
        "*.cache"
        "*.pyc"
        "*.pyo"
        "__pycache__"
        "node_modules"
        ".git"
        ".venv"
        ".env"
        "*.pid"
        "*.lock"
        ".DS_Store"
        "Thumbs.db"
        "*.swp"
        "*.swo"
        "*~"
        ".pytest_cache"
        ".coverage"
        "htmlcov"
        "dist"
        "build"
        "*.egg-info"
        "*.so"
        "*.dll"
        "*.exe"
        "*.bin"
        "*.gguf"
        "data"
        "logs"
        "screenshots"
        "test-results"
        ".docker_cache"
        ".cursor"
    )
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è inotifywait
    local exclude_string=""
    for pattern in "${patterns[@]}"; do
        exclude_string="$exclude_string --exclude '$pattern'"
    done
    
    echo "$exclude_string"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–∞
run_auto_commit() {
    local auto_commit_script="$(get_git_root)/scripts/auto_commit.sh"
    
    if [ -f "$auto_commit_script" ] && [ -x "$auto_commit_script" ]; then
        log "–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–∞..."
        "$auto_commit_script" &
        success "–ê–≤—Ç–æ–∫–æ–º–º–∏—Ç –∑–∞–ø—É—â–µ–Ω"
    else
        error "–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π: $auto_commit_script"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_files() {
    local git_root=$(get_git_root)
    local watch_dirs=($(get_watch_directories))
    local exclude_patterns=$(get_exclude_patterns)
    
    log "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ñ–∞–π–ª–æ–≤..."
    log "–ú–æ–Ω–∏—Ç–æ—Ä–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
    for dir in "${watch_dirs[@]}"; do
        echo "  - $dir"
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    if [ ${#watch_dirs[@]} -eq 0 ]; then
        error "–ù–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    log "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º inotifywait –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    inotifywait -m -r -e modify,create,delete,move \
        --format '%w%f %e' \
        $exclude_patterns \
        "${watch_dirs[@]}" | while read file event; do
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω—ã–º
        if [ -f "$file" ] && [[ ! "$file" =~ \.(log|tmp|temp|cache|pyc|pyo|swp|swo)$ ]]; then
            log "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: $file ($event)"
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π
            sleep 2
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç
            run_auto_commit
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è macOS (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç fswatch)
monitor_files_macos() {
    local git_root=$(get_git_root)
    local watch_dirs=($(get_watch_directories))
    
    log "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ñ–∞–π–ª–æ–≤ (macOS)..."
    log "–ú–æ–Ω–∏—Ç–æ—Ä–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
    for dir in "${watch_dirs[@]}"; do
        echo "  - $dir"
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    if [ ${#watch_dirs[@]} -eq 0 ]; then
        error "–ù–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –ø–æ–º–æ—â—å—é fswatch
    log "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏."
    
    fswatch -o "${watch_dirs[@]}" | while read f; do
        log "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö"
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π
        sleep 2
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç
        run_auto_commit
    done
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
detect_os() {
    case "$(uname -s)" in
        Darwin*)    echo "macos" ;;
        Linux*)     echo "linux" ;;
        CYGWIN*)    echo "windows" ;;
        MINGW*)     echo "windows" ;;
        *)          echo "unknown" ;;
    esac
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    log "–ó–∞–ø—É—Å–∫ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    check_dependencies
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –û–° –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    local os=$(detect_os)
    
    case "$os" in
        "linux")
            monitor_files
            ;;
        "macos")
            if command -v fswatch &> /dev/null; then
                monitor_files_macos
            else
                error "fswatch –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: brew install fswatch"
                exit 1
            fi
            ;;
        *)
            error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $os"
            exit 1
            ;;
    esac
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'echo -e "\n${YELLOW}[INFO]${NC} –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit 0' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏
main "$@" 