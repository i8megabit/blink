version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - OLLAMA_URL=http://ollama:11434/api/generate
      - OLLAMA_MODEL=qwen2.5:7b-instruct-turbo
    depends_on:
      - db
      - ollama

  testing:
    build:
      context: .
      dockerfile: testing/Dockerfile
    ports:
      - "8003:8003"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - CACHE_TTL=3600
      - CACHE_PREFIX=testing
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - MAX_CONCURRENT_TESTS=10
      - TEST_TIMEOUT=300
      - REPORT_RETENTION_DAYS=30
      - METRICS_ENABLED=true
      - PROMETHEUS_PORT=9090
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    depends_on:
      - redis
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
      - testing

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: seo_user
      POSTGRES_PASSWORD: seo_pass
      POSTGRES_DB: seo_db
    volumes:
      - ../relink_db:/var/lib/postgresql/data

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ./ollama_models:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=*
    restart: unless-stopped

volumes:
  redis_data: 