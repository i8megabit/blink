version: '3.8'

# üöÄ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ú–ò–ö–†–û–°–ï–†–í–ò–°–û–í reLink
# RAG-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å ChromaDB –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ë–î

services:
  # üê≥ –ë–ê–ó–û–í–´–ï –°–ï–†–í–ò–°–´
  redis:
    image: redis:7-alpine
    container_name: relink-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    environment:
      - REDIS_PASSWORD=relink_redis_pass
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üß† AI/ML –°–ï–†–í–ò–°–´
  ollama:
    image: ollama/ollama:latest
    container_name: relink-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üóÑÔ∏è CHROMADB - –û–°–ù–û–í–ù–ê–Ø –ë–ê–ó–ê –î–ê–ù–ù–´–•
  chromadb:
    image: chromadb/chroma:latest
    container_name: relink-chromadb
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
      - ./chromadb_persist:/chroma/chroma/persist
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
      - ANONYMIZED_TELEMETRY=False
      - CHROMA_SERVER_AUTH_CREDENTIALS_FILE=/chroma/chroma/auth.json
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=chromadb.auth.providers.HtpasswdFileServerAuthProvider
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üîß –ú–ò–ö–†–û–°–ï–†–í–ò–°–´ (–ï–î–ò–ù–´–ô –ë–ê–ó–û–í–´–ô –û–ë–†–ê–ó)
  router:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: router
        SERVICE_PORT: 8001
    container_name: relink-router
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=router
      - SERVICE_PORT=8001
      - CHROMADB_URL=http://chromadb:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - DEBUG=true
    volumes:
      - ./router:/app/router
      - ./bootstrap:/app/bootstrap
    depends_on:
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  benchmark:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: benchmark
        SERVICE_PORT: 8002
    container_name: relink-benchmark
    ports:
      - "8002:8002"
    environment:
      - SERVICE_NAME=benchmark
      - SERVICE_PORT=8002
      - CHROMADB_URL=http://chromadb:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - ROUTER_URL=http://router:8001
      - DEBUG=true
    volumes:
      - ./benchmark:/app/benchmark
      - ./bootstrap:/app/bootstrap
    depends_on:
      redis:
        condition: service_healthy
      router:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  relink:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: relink
        SERVICE_PORT: 8003
    container_name: relink-seo
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=relink
      - SERVICE_PORT=8003
      - CHROMADB_URL=http://chromadb:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - ROUTER_URL=http://router:8001
      - BENCHMARK_URL=http://benchmark:8002
      - DEBUG=true
    volumes:
      - ./relink:/app/relink
      - ./bootstrap:/app/bootstrap
    depends_on:
      redis:
        condition: service_healthy
      router:
        condition: service_healthy
      benchmark:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: backend
        SERVICE_PORT: 8004
    container_name: relink-backend
    ports:
      - "8004:8004"
    environment:
      - SERVICE_NAME=backend
      - SERVICE_PORT=8004
      - CHROMADB_URL=http://chromadb:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - ROUTER_URL=http://router:8001
      - RELINK_URL=http://relink:8003
      - BENCHMARK_URL=http://benchmark:8002
      - DEBUG=true
    volumes:
      - ./backend:/app/backend
      - ./bootstrap:/app/bootstrap
    depends_on:
      redis:
        condition: service_healthy
      router:
        condition: service_healthy
      relink:
        condition: service_healthy
      benchmark:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üß† LLM TUNING –°–ï–†–í–ò–°
  llm_tuning:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: llm_tuning
        SERVICE_PORT: 8007
    container_name: relink-llm-tuning
    ports:
      - "8007:8007"
    environment:
      - SERVICE_NAME=llm_tuning
      - SERVICE_PORT=8007
      - CHROMADB_URL=http://chromadb:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - OLLAMA_URL=http://ollama:11434
      - ROUTER_URL=http://router:8001
      - BACKEND_URL=http://backend:8004
      - DEBUG=true
    volumes:
      - ./llm_tuning:/app/llm_tuning
      - ./bootstrap:/app/bootstrap
    depends_on:
      redis:
        condition: service_healthy
      router:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üé® –§–†–û–ù–¢–ï–ù–î
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: relink-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8004
      - VITE_ROUTER_URL=http://localhost:8001
      - VITE_RELINK_URL=http://localhost:8003
      - VITE_BENCHMARK_URL=http://localhost:8002
      - VITE_LLM_TUNING_URL=http://localhost:8007
      - VITE_OLLAMA_URL=http://localhost:11434
      - VITE_CHROMADB_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
      router:
        condition: service_healthy
      relink:
        condition: service_healthy
      benchmark:
        condition: service_healthy
      llm_tuning:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì
  monitoring:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: monitoring
        SERVICE_PORT: 8005
    container_name: relink-monitoring
    ports:
      - "8005:8005"
    environment:
      - SERVICE_NAME=monitoring
      - SERVICE_PORT=8005
      - CHROMADB_URL=http://chromadb:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - BACKEND_URL=http://backend:8004
      - ROUTER_URL=http://router:8001
      - RELINK_URL=http://relink:8003
      - BENCHMARK_URL=http://benchmark:8002
      - LLM_TUNING_URL=http://llm_tuning:8007
      - DEBUG=true
    volumes:
      - ./monitoring:/app/monitoring
      - ./bootstrap:/app/bootstrap
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
  testing:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: testing
        SERVICE_PORT: 8006
    container_name: relink-testing
    ports:
      - "8006:8006"
    environment:
      - SERVICE_NAME=testing
      - SERVICE_PORT=8006
      - CHROMADB_URL=http://chromadb:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=relink_redis_pass
      - BACKEND_URL=http://backend:8004
      - ROUTER_URL=http://router:8001
      - RELINK_URL=http://relink:8003
      - BENCHMARK_URL=http://benchmark:8002
      - LLM_TUNING_URL=http://llm_tuning:8007
      - FRONTEND_URL=http://frontend:3000
      - DEBUG=true
    volumes:
      - ./testing:/app/testing
      - ./bootstrap:/app/bootstrap
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  ollama_data:
    driver: local
  chromadb_data:
    driver: local

networks:
  relink-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 