# üöÄ reLink Docker Compose —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º BuildKit
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç BuildKit –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å–±–æ—Ä–∫–∏

version: '3.8'

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ BuildKit
x-buildkit: &buildkit
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
x-common: &common
  restart: unless-stopped
  networks:
    - relink-network

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
      args:
        <<: *buildkit
    image: eberil/relink-backend:4.1.2
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - SECRET_KEY=your-super-secret-key-for-jwt-tokens-2024
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - OLLAMA_URL=http://ollama:11434/api/generate
      - OLLAMA_MODEL=qwen2.5:7b-instruct-turbo
      - DB_HOST=db
      - DB_USER=seo_user
      - DB_PASSWORD=seo_pass
      - DB_NAME=seo_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_URL=redis://redis:6379
      - CACHE_TTL=3600
      - CACHE_PREFIX=backend_
    deploy:
      resources:
        limits:
          cpus: '1.391'
          memory: 1734M
        reservations:
          cpus: '0.695'
          memory: 867M
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/v1/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - db
      - redis
      - ollama
    <<: *common

  docs:
    build:
      context: ../docs
      dockerfile: Dockerfile
      args:
        <<: *buildkit
    image: eberil/relink-docs:4.1.2
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CACHE_TTL=3600
      - CACHE_PREFIX=docs_
      - DOCS_PATH=/app/static
      - VERSION_FILE=/app/VERSION
      - README_FILE=/app/README.md
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
    deploy:
      resources:
        limits:
          cpus: '0.347'
          memory: 433M
        reservations:
          cpus: '0.173'
          memory: 216M
    volumes:
      - ./VERSION:/app/VERSION:ro
      - ./README.md:/app/README.md:ro
      - ./TECHNICAL_ROADMAP.md:/app/static/TECHNICAL_ROADMAP.md:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/api/v1/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    <<: *common

  monitoring:
    build:
      context: ../monitoring
      dockerfile: Dockerfile
      args:
        <<: *buildkit
    image: eberil/relink-monitoring:4.1.2
    ports:
      - "8002:8002"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - OLLAMA_URL=http://ollama:11434
      - CACHE_TTL=3600
      - CACHE_PREFIX=monitoring_
      - COLLECT_INTERVAL=30
      - RETENTION_DAYS=30
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    deploy:
      resources:
        limits:
          cpus: '0.347'
          memory: 867M
        reservations:
          cpus: '0.173'
          memory: 433M
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8002/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - db
      - ollama
    <<: *common

  testing:
    build:
      context: ../testing
      dockerfile: Dockerfile
      args:
        <<: *buildkit
    image: eberil/relink-testing:4.1.2
    ports:
      - "8003:8003"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - CACHE_TTL=3600
      - CACHE_PREFIX=testing_
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - MAX_CONCURRENT_TESTS=10
      - TEST_TIMEOUT=300
      - REPORT_RETENTION_DAYS=30
      - METRICS_ENABLED=true
      - PROMETHEUS_PORT=9090
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    deploy:
      resources:
        limits:
          cpus: '0.695'
          memory: 867M
        reservations:
          cpus: '0.347'
          memory: 433M
    volumes:
      - ./testing/reports:/app/reports
      - ./testing/test_data:/app/test_data
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8003/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - db
      - prometheus
    <<: *common

  router:
    build:
      context: ../router
      dockerfile: Dockerfile
      args:
        <<: *buildkit
    image: eberil/relink-router:4.1.2
    ports:
      - "8004:8004"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=2
      - OLLAMA_URL=http://ollama:11434
      - CACHE_TTL=3600
      - CACHE_PREFIX=router_
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - MAX_CONCURRENT_REQUESTS=50
      - REQUEST_TIMEOUT=30
      - MODEL_SELECTION_STRATEGY=performance
    deploy:
      resources:
        limits:
          cpus: '0.695'
          memory: 867M
        reservations:
          cpus: '0.347'
          memory: 433M
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8004/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - db
      - ollama
    <<: *common

  frontend:
    build:
      context: ../frontend-refactored
      dockerfile: Dockerfile
      args:
        <<: *buildkit
    image: eberil/relink-frontend:4.1.2
    ports:
      - "3000:80"
    environment:
      - REACT_APP_BACKEND_URL=http://backend:8000
      - REACT_APP_ROUTER_URL=http://router:8004
      - REACT_APP_TESTING_URL=http://testing:8003
      - REACT_APP_MONITORING_URL=http://monitoring:8002
      - REACT_APP_DOCS_URL=http://docs:8001
      - REACT_APP_API_TIMEOUT=30000
      - REACT_APP_ENABLE_ANALYTICS=true
      - REACT_APP_ENVIRONMENT=production
    deploy:
      resources:
        limits:
          cpus: '0.695'
          memory: 867M
        reservations:
          cpus: '0.347'
          memory: 433M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - backend
      - docs
      - monitoring
      - testing
      - router
    <<: *common

  benchmark:
    build:
      context: ../benchmark
      dockerfile: Dockerfile
      args:
        <<: *buildkit
    image: eberil/relink-benchmark:4.1.2
    ports:
      - "8005:8001"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=3
      - OLLAMA_URL=http://ollama:11434
      - CACHE_TTL=3600
      - CACHE_PREFIX=benchmark_
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - BENCHMARK_TIMEOUT=600
      - MAX_CONCURRENT_BENCHMARKS=5
    deploy:
      resources:
        limits:
          cpus: '0.695'
          memory: 867M
        reservations:
          cpus: '0.347'
          memory: 433M
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - db
      - ollama
    <<: *common

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.347'
          memory: 433M
        reservations:
          cpus: '0.173'
          memory: 216M
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *common

  db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=seo_db
      - POSTGRES_USER=seo_user
      - POSTGRES_PASSWORD=seo_pass
    deploy:
      resources:
        limits:
          cpus: '0.695'
          memory: 867M
        reservations:
          cpus: '0.347'
          memory: 433M
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U seo_user -d seo_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *common

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    <<: *common

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    deploy:
      resources:
        limits:
          cpus: '0.347'
          memory: 433M
        reservations:
          cpus: '0.173'
          memory: 216M
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *common

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "6831:6831/udp"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    deploy:
      resources:
        limits:
          cpus: '0.347'
          memory: 433M
        reservations:
          cpus: '0.173'
          memory: 216M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *common

volumes:
  postgres_data:
  redis_data:
  ollama_data:
  prometheus_data:

networks:
  relink-network:
    driver: bridge
