#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ LLM Tuning Microservice

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL=${BASE_URL:-"http://localhost:8000"}
PYTHON_CMD=${PYTHON_CMD:-"python3"}
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# –§—É–Ω–∫—Ü–∏–∏
print_header() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}================================${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

check_service() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞..."
    if curl -f -s "$BASE_URL/health" > /dev/null; then
        print_success "–°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        print_error "–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É $BASE_URL"
        print_warning "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω: make run"
        return 1
    fi
}

install_dependencies() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    local missing_deps=()
    
    if ! python3 -c "import aiohttp" 2>/dev/null; then
        missing_deps+=("aiohttp")
    fi
    
    if ! python3 -c "import psutil" 2>/dev/null; then
        missing_deps+=("psutil")
    fi
    
    if ! python3 -c "import matplotlib" 2>/dev/null; then
        missing_deps+=("matplotlib")
    fi
    
    if ! python3 -c "import numpy" 2>/dev/null; then
        missing_deps+=("numpy")
    fi
    
    if [ ${#missing_deps[@]} -ne 0 ]; then
        print_warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing_deps[*]}"
        read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            pip3 install "${missing_deps[@]}"
            print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            print_error "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ó–∞–ø—É—Å–∫ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω."
            exit 1
        fi
    else
        print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
}

run_benchmark() {
    local benchmark_name=$1
    local num_requests=${2:-100}
    
    print_header "–ó–∞–ø—É—Å–∫ –±–µ–Ω—á–º–∞—Ä–∫–∞: $benchmark_name"
    print_info "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: $num_requests"
    
    cd "$SCRIPT_DIR"
    if $PYTHON_CMD performance_test.py "$benchmark_name" "$num_requests"; then
        print_success "–ë–µ–Ω—á–º–∞—Ä–∫ $benchmark_name –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–ë–µ–Ω—á–º–∞—Ä–∫ $benchmark_name –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
        return 1
    fi
}

run_full_benchmark() {
    print_header "–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –±–µ–Ω—á–º–∞—Ä–∫–∞"
    
    cd "$SCRIPT_DIR"
    if $PYTHON_CMD performance_test.py; then
        print_success "–ü–æ–ª–Ω—ã–π –±–µ–Ω—á–º–∞—Ä–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–ü–æ–ª–Ω—ã–π –±–µ–Ω—á–º–∞—Ä–∫ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
        return 1
    fi
}

show_results() {
    print_header "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–Ω—á–º–∞—Ä–∫–æ–≤"
    
    if [ -f "$SCRIPT_DIR/benchmark_report.txt" ]; then
        echo -e "${GREEN}üìÑ –û—Ç—á–µ—Ç:${NC}"
        cat "$SCRIPT_DIR/benchmark_report.txt"
        echo
    fi
    
    if [ -f "$SCRIPT_DIR/benchmark_results.png" ]; then
        print_success "üìä –ì—Ä–∞—Ñ–∏–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $SCRIPT_DIR/benchmark_results.png"
    fi
}

clean_results() {
    print_info "–û—á–∏—Å—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤..."
    rm -f "$SCRIPT_DIR/benchmark_report.txt"
    rm -f "$SCRIPT_DIR/benchmark_results.png"
    print_success "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—â–µ–Ω—ã"
}

show_help() {
    cat << EOF
üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê] [–ü–ê–†–ê–ú–ï–¢–†–´]

–ö–æ–º–∞–Ω–¥—ã:
    full                    –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
    ab-testing [N]         –ë–µ–Ω—á–º–∞—Ä–∫ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (N –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100)
    optimization [N]       –ë–µ–Ω—á–º–∞—Ä–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (N –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 50)
    quality [N]            –ë–µ–Ω—á–º–∞—Ä–∫ –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ (N –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100)
    health [N]             –ë–µ–Ω—á–º–∞—Ä–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–¥–æ—Ä–æ–≤—å—è (N –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 200)
    stats [N]              –ë–µ–Ω—á–º–∞—Ä–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (N –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100)
    stress                 –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (1000+ –∑–∞–ø—Ä–æ—Å–æ–≤)
    quick                  –ë—ã—Å—Ç—Ä—ã–π –±–µ–Ω—á–º–∞—Ä–∫ (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤)
    check                  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install-deps           –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    clean                  –û—á–∏—Å—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    results                –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    help                   –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
    BASE_URL               URL —Å–µ—Ä–≤–∏—Å–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: http://localhost:8000)
    PYTHON_CMD             –ö–æ–º–∞–Ω–¥–∞ Python (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: python3)

–ü—Ä–∏–º–µ—Ä—ã:
    $0 full                    # –ü–æ–ª–Ω—ã–π –±–µ–Ω—á–º–∞—Ä–∫
    $0 ab-testing 50          # A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å 50 –∑–∞–ø—Ä–æ—Å–∞–º–∏
    $0 stress                 # –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    $0 check                  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    BASE_URL=http://prod:8000 $0 full  # –ë–µ–Ω—á–º–∞—Ä–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞

EOF
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    local command=${1:-help}
    
    case $command in
        full)
            check_service
            install_dependencies
            run_full_benchmark
            show_results
            ;;
        ab-testing)
            check_service
            install_dependencies
            run_benchmark "ab_testing" "$2"
            ;;
        optimization)
            check_service
            install_dependencies
            run_benchmark "optimization" "$2"
            ;;
        quality)
            check_service
            install_dependencies
            run_benchmark "quality_assessment" "$2"
            ;;
        health)
            check_service
            install_dependencies
            run_benchmark "system_health" "$2"
            ;;
        stats)
            check_service
            install_dependencies
            run_benchmark "extended_stats" "$2"
            ;;
        stress)
            check_service
            install_dependencies
            print_header "–°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
            run_benchmark "system_health" 1000
            run_benchmark "extended_stats" 500
            show_results
            ;;
        quick)
            check_service
            install_dependencies
            print_header "–ë—ã—Å—Ç—Ä—ã–π –±–µ–Ω—á–º–∞—Ä–∫"
            run_benchmark "ab_testing" 10
            run_benchmark "quality_assessment" 20
            show_results
            ;;
        check)
            check_service
            install_dependencies
            print_success "–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É –±–µ–Ω—á–º–∞—Ä–∫–æ–≤"
            ;;
        install-deps)
            install_dependencies
            ;;
        clean)
            clean_results
            ;;
        results)
            show_results
            ;;
        help|--help|-h)
            show_help
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command"
            echo
            show_help
            exit 1
            ;;
    esac
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'print_error "–ë–µ–Ω—á–º–∞—Ä–∫ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@" 