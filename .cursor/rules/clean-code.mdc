---
description: 
globs: **/*.py,**/*.ts,**/*.tsx,**/*.js,**/*.jsx,**/*.java,**/*.cpp,**/*.c
alwaysApply: false
---
# Рекомендации по чистому коду

## Константы вместо магических чисел
- Заменяйте жестко закодированные значения именованными константами
- Используйте описательные имена констант, которые объясняют назначение значения
- Храните константы в начале файла или в специальном файле констант

## Осмысленные имена
- Переменные, функции и классы должны отражать свое назначение
- Имена должны объяснять, почему что-то существует и как используется
- Избегайте сокращений, если они не являются общепринятыми

## Умные комментарии
- Не комментируйте то, что делает код - делайте код самодокументируемым
- Используйте комментарии, чтобы объяснить, почему что-то сделано определенным образом
- Документируйте API, сложные алгоритмы и неочевидные побочные эффекты

## Единственная ответственность
- Каждая функция должна делать ровно одну вещь
- Функции должны быть маленькими и целенаправленными
- Если функции нужен комментарий, объясняющий, что она делает, её следует разделить

## Не повторяйся (DRY)
- Выделяйте повторяющийся код в повторно используемые функции
- Делитесь общей логикой через правильную абстракцию
- Поддерживайте единый источник истины

## Чистая структура
- Держите связанный код вместе
- Организуйте код в логической иерархии
- Используйте последовательные соглашения по именованию файлов и папок

## Инкапсуляция
- Скрывайте детали реализации
- Предоставляйте четкие интерфейсы
- Перемещайте вложенные условия в функции с понятными именами

## Поддержание качества кода
- Постоянно проводите рефакторинг
- Устраняйте технический долг заранее
- Оставляйте код чище, чем вы его нашли

## Тестирование
- Пишите тесты перед исправлением ошибок
- Поддерживайте тесты в читаемом и сопровождаемом состоянии
- Тестируйте граничные случаи и условия ошибок

## Контроль версий
- Пишите понятные сообщения коммитов
- Делайте небольшие, целенаправленные коммиты
- Используйте осмысленные имена веток