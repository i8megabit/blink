#!/bin/bash

# üöÄ reLink Shell Aliases Setup
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–ª–∏–∞—Å–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è BuildKit

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ shell
SHELL_TYPE=""
if [ -n "${ZSH_VERSION:-}" ]; then
    SHELL_TYPE="zsh"
    SHELL_RC="$HOME/.zshrc"
elif [ -n "${BASH_VERSION:-}" ]; then
    SHELL_TYPE="bash"
    SHELL_RC="$HOME/.bashrc"
else
    echo -e "${RED}‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π shell${NC}"
    exit 1
fi

# –ü—É—Ç–∏
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
BUILD_SCRIPT="${PROJECT_ROOT}/scripts/professional-build.sh"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
if [ ! -f "$BUILD_SCRIPT" ]; then
    echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $BUILD_SCRIPT${NC}"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª–∏–∞—Å–æ–≤
create_aliases() {
    echo -e "${BLUE}üîß –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª–∏–∞—Å–æ–≤ –¥–ª—è $SHELL_TYPE...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∞–ª–∏–∞—Å–∞–º–∏
    cat > /tmp/relink_aliases.tmp << 'EOF'

# üöÄ reLink Docker Aliases
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BuildKit –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ —Å–±–æ—Ä–∫–∏

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–±–æ—Ä–∫–∏
alias relink-build='./scripts/professional-build.sh build'
alias relink-build-nc='./scripts/professional-build.sh build-no-cache'
alias relink-build-service='./scripts/professional-build.sh build'

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏
alias relink-up='./scripts/professional-build.sh up'
alias relink-down='./scripts/professional-build.sh down'
alias relink-restart='./scripts/professional-build.sh restart'

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
alias relink-logs='./scripts/professional-build.sh logs'
alias relink-health='./scripts/professional-build.sh health'
alias relink-analyze='./scripts/professional-build.sh analyze'

# –û—á–∏—Å—Ç–∫–∞
alias relink-clean='./scripts/professional-build.sh cleanup'
alias relink-clean-force='./scripts/professional-build.sh cleanup-force'

# –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã
alias relink-quick='./scripts/professional-build.sh quick-start'
alias relink-dev='./scripts/professional-build.sh dev'
alias relink-prod='./scripts/professional-build.sh prod'

# Makefile –∞–ª–∏–∞—Å—ã (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
if [ -f "Makefile" ]; then
    alias relink-make='make -f Makefile'
    alias relink-build-make='make build'
    alias relink-up-make='make up'
    alias relink-down-make='make down'
    alias relink-restart-make='make restart'
    alias relink-logs-make='make logs'
    alias relink-health-make='make health'
    alias relink-analyze-make='make analyze'
    alias relink-clean-make='make clean'
    alias relink-quick-make='make quick-start'
    alias relink-dev-make='make dev'
    alias relink-prod-make='make prod'
fi

# Docker Compose —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º BuildKit
alias dcb='DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 docker-compose -f config/docker-compose.yml build'
alias dcu='DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 docker-compose -f config/docker-compose.yml up -d'
alias dcd='docker-compose -f config/docker-compose.yml down'
alias dcr='docker-compose -f config/docker-compose.yml restart'
alias dcl='docker-compose -f config/docker-compose.yml logs -f'

# –£—Ç–∏–ª–∏—Ç—ã
alias relink-help='./scripts/professional-build.sh help'
alias relink-status='docker-compose -f config/docker-compose.yml ps'
alias relink-ps='docker ps --filter "name=relink" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"'

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
alias relink-cd='cd $(git rev-parse --show-toplevel 2>/dev/null || echo .)'

# –≠–∫—Å–ø–æ—Ä—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1
export COMPOSE_FILE=config/docker-compose.yml

echo "üöÄ reLink aliases loaded for $SHELL_TYPE"
EOF

    # –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å—ã –≤ shell RC —Ñ–∞–π–ª
    if ! grep -q "reLink Docker Aliases" "$SHELL_RC" 2>/dev/null; then
        echo "" >> "$SHELL_RC"
        echo "# üöÄ reLink Docker Aliases" >> "$SHELL_RC"
        echo "source $PROJECT_ROOT/scripts/relink-aliases.sh" >> "$SHELL_RC"
        echo -e "${GREEN}‚úÖ –ê–ª–∏–∞—Å—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ $SHELL_RC${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ê–ª–∏–∞—Å—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ $SHELL_RC${NC}"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å –∞–ª–∏–∞—Å–∞–º–∏
    cp /tmp/relink_aliases.tmp "$PROJECT_ROOT/scripts/relink-aliases.sh"
    chmod +x "$PROJECT_ROOT/scripts/relink-aliases.sh"
    
    echo -e "${GREEN}‚úÖ –ê–ª–∏–∞—Å—ã —Å–æ–∑–¥–∞–Ω—ã –≤ $PROJECT_ROOT/scripts/relink-aliases.sh${NC}"
}

# –£–¥–∞–ª–µ–Ω–∏–µ –∞–ª–∏–∞—Å–æ–≤
remove_aliases() {
    echo -e "${YELLOW}üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∞–ª–∏–∞—Å–æ–≤...${NC}"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –∏–∑ shell RC —Ñ–∞–π–ª–∞
    if [ -f "$SHELL_RC" ]; then
        sed -i.bak '/reLink Docker Aliases/,+1d' "$SHELL_RC"
        echo -e "${GREEN}‚úÖ –ê–ª–∏–∞—Å—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ $SHELL_RC${NC}"
    fi
    
    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∞–ª–∏–∞—Å–æ–≤
    if [ -f "$PROJECT_ROOT/scripts/relink-aliases.sh" ]; then
        rm "$PROJECT_ROOT/scripts/relink-aliases.sh"
        echo -e "${GREEN}‚úÖ –§–∞–π–ª –∞–ª–∏–∞—Å–æ–≤ —É–¥–∞–ª–µ–Ω${NC}"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
show_help() {
    echo -e "${BLUE}üöÄ reLink Shell Aliases Setup${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  install    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–ª–∏–∞—Å—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  remove     - –£–¥–∞–ª–∏—Ç—å –∞–ª–∏–∞—Å—ã"
    echo "  help       - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã:"
    echo "  relink-build      - –°–±–æ—Ä–∫–∞ —Å BuildKit"
    echo "  relink-up         - –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  relink-down       - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  relink-logs       - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo "  relink-health     - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"
    echo "  relink-quick      - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç"
    echo "  relink-dev        - –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    echo "  relink-prod       - –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º"
    echo ""
    echo "–¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã Makefile –∫–æ–º–∞–Ω–¥—ã:"
    echo "  relink-build-make - –°–±–æ—Ä–∫–∞ —á–µ—Ä–µ–∑ Makefile"
    echo "  relink-up-make    - –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Makefile"
    echo ""
    echo "–ò –ø—Ä—è–º—ã–µ Docker Compose –∫–æ–º–∞–Ω–¥—ã:"
    echo "  dcb               - docker-compose build —Å BuildKit"
    echo "  dcu               - docker-compose up —Å BuildKit"
    echo "  dcd               - docker-compose down"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local command=${1:-"install"}
    
    case $command in
        "install"|"setup")
            create_aliases
            echo -e "${GREEN}üéâ –ê–ª–∏–∞—Å—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${NC}"
            echo -e "${BLUE}üí° –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: source $SHELL_RC${NC}"
            ;;
        "remove"|"uninstall")
            remove_aliases
            echo -e "${GREEN}‚úÖ –ê–ª–∏–∞—Å—ã —É–¥–∞–ª–µ–Ω—ã${NC}"
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command${NC}"
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 