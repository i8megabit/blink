# Makefile –¥–ª—è reLink - AI-Powered SEO Platform
# –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Apple Silicon M4

.PHONY: help metrics resources build test deploy clean

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
BLUE = \033[0;34m
NC = \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(BLUE)üîó reLink - AI-Powered SEO Platform$(NC)"
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}'

metrics: ## –û–±–Ω–æ–≤–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ README.md
	@echo "$(BLUE)üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@python3 update_metrics.py

resources: ## –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ª–∏–º–∏—Ç—ã —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –≤—Å–µ—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üöÄ –†–∞—Å—á–µ—Ç –ª–∏–º–∏—Ç–æ–≤ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è Apple Silicon M4...$(NC)"
	@python3 resource_limits.py

build: ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ Docker –æ–±—Ä–∞–∑—ã
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@docker-compose build --parallel

build-native: ## –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è Apple Silicon
	@echo "$(BLUE)üçé –°–±–æ—Ä–∫–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è Apple Silicon...$(NC)"
	@DOCKER_DEFAULT_PLATFORM=linux/arm64 docker-compose build --parallel

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose up -d

up-native: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è Apple Silicon
	@echo "$(BLUE)üçé –ó–∞–ø—É—Å–∫ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è Apple Silicon...$(NC)"
	@docker-compose -f docker-compose.native-gpu.yml up -d

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(RED)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose down

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@docker-compose logs -f

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@docker-compose ps

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@cd frontend && npm test
	@cd backend && python -m pytest

test-e2e: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å E2E —Ç–µ—Å—Ç—ã
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@cd frontend && npm run test:e2e

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...$(NC)"
	@cd frontend && npm run lint
	@cd backend && python -m flake8 .

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(BLUE)‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	@cd frontend && npm run format
	@cd backend && python -m black .

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã
	@echo "$(RED)üßπ –û—á–∏—Å—Ç–∫–∞ Docker...$(NC)"
	@docker-compose down -v --rmi all
	@docker system prune -f

clean-all: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è node_modules)
	@echo "$(RED)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...$(NC)"
	@docker-compose down -v --rmi all
	@docker system prune -f
	@cd frontend && rm -rf node_modules package-lock.json
	@cd backend && rm -rf __pycache__ .pytest_cache

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@cd frontend && npm install
	@cd backend && pip install -r requirements.txt

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d

prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ...$(NC)"
	@docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

monitor: ## –û—Ç–∫—Ä—ã—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
	@echo "$(BLUE)üìä –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...$(NC)"
	@open http://localhost:3000
	@open http://localhost:8000/docs
	@open http://localhost:9090

backup: ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö
	@echo "$(BLUE)üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...$(NC)"
	@mkdir -p backups
	@docker-compose exec postgres pg_dump -U postgres relink > backups/backup_$(shell date +%Y%m%d_%H%M%S).sql

restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
	@echo "$(BLUE)üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@ls -la backups/
	@echo "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:"
	@read filename && docker-compose exec -T postgres psql -U postgres relink < backups/$$filename

update: ## –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@cd frontend && npm update
	@cd backend && pip install --upgrade -r requirements.txt

security: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
	@echo "$(BLUE)üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...$(NC)"
	@cd frontend && npm audit
	@cd backend && safety check

performance: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
	@echo "$(BLUE)‚ö° –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...$(NC)"
	@cd backend && python -m pytest tests/test_performance.py -v

docs: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "$(BLUE)üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...$(NC)"
	@cd backend && python -m pydoc -w app/
	@cd frontend && npm run build:docs

deploy: build test up ## –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (—Å–±–æ—Ä–∫–∞ + —Ç–µ—Å—Ç—ã + –∑–∞–ø—É—Å–∫)
	@echo "$(GREEN)‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!$(NC)"

# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Apple Silicon
apple-setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Apple Silicon
	@echo "$(BLUE)üçé –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Apple Silicon M4...$(NC)"
	@echo "export OLLAMA_METAL=1" >> ~/.zshrc
	@echo "export OLLAMA_FLASH_ATTENTION=1" >> ~/.zshrc
	@echo "export OLLAMA_KV_CACHE_TYPE=q8_0" >> ~/.zshrc
	@echo "export OLLAMA_CONTEXT_LENGTH=4096" >> ~/.zshrc
	@echo "export OLLAMA_BATCH_SIZE=512" >> ~/.zshrc
	@echo "export OLLAMA_NUM_PARALLEL=2" >> ~/.zshrc
	@echo "$(GREEN)‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ ~/.zshrc$(NC)"
	@echo "$(YELLOW)–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: source ~/.zshrc$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
check-health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@curl -f http://localhost:8000/health || echo "$(RED)‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@curl -f http://localhost:3000 || echo "$(RED)‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@curl -f http://localhost:11434/api/tags || echo "$(RED)‚ùå Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
watch: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
	@echo "$(BLUE)üëÄ –†–µ–∂–∏–º –Ω–∞–±–ª—é–¥–µ–Ω–∏—è...$(NC)"
	@cd frontend && npm run dev &
	@cd backend && python -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
	@echo "$(BLUE)üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:$(NC)"
	@echo "  –í–µ—Ä—Å–∏—è: 4.1.1"
	@echo "  Python: 3.11+"
	@echo "  Node.js: 18+"
	@echo "  Docker: –≥–æ—Ç–æ–≤"
	@echo "  Apple Silicon: –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω"
	@echo ""
	@echo "$(YELLOW)–ü–æ—Ä—Ç—ã:$(NC)"
	@echo "  Frontend: http://localhost:3000"
	@echo "  Backend: http://localhost:8000"
	@echo "  Ollama: http://localhost:11434"
	@echo "  Prometheus: http://localhost:9090"
	@echo "  Grafana: http://localhost:3001"

version: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é
	@echo "reLink v4.1.1 - AI-Powered SEO Platform"
	@echo "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Apple Silicon M4" 