# üöÄ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ú–ò–ö–†–û–°–ï–†–í–ò–°–û–í reLink
# RAG-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å ChromaDB –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ë–î

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–π —Å–±–æ—Ä–∫–∏
x-architecture: &architecture
  # –î–ª—è Apple Silicon (ARM64)
  arm64: &arm64-config
    dockerfile: Dockerfile.apple-silicon
    platform: linux/arm64
  # –î–ª—è x86_64
  amd64: &amd64-config
    dockerfile: Dockerfile.base
    platform: linux/amd64

services:
  # üê≥ –ë–ê–ó–û–í–´–ï –°–ï–†–í–ò–°–´
  redis:
    image: redis:7-alpine
    container_name: relink-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    environment:
      - REDIS_PASSWORD=relink_redis_pass
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üß† AI/ML –°–ï–†–í–ò–°–´
  ollama:
    image: ollama/ollama:latest
    container_name: relink-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üóÑÔ∏è ChromaDB - –æ—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  chromadb:
    image: chromadb/chroma:latest
    container_name: relink-chromadb
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
      - ANONYMIZED_TELEMETRY=False
    networks:
      - relink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üîÑ –ú–ò–ö–†–û–°–ï–†–í–ò–°–´ (—É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –±–∞–∑–µ Dockerfile.base)
  router:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: router
        SERVICE_PORT: 8001
    container_name: relink-router
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=router
      - SERVICE_PORT=8001
      - DEBUG=true
    networks:
      - relink-network
    depends_on:
      - ollama
      - chromadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  benchmark:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: benchmark
        SERVICE_PORT: 8002
    container_name: relink-benchmark
    ports:
      - "8002:8002"
    environment:
      - SERVICE_NAME=benchmark
      - SERVICE_PORT=8002
      - DEBUG=true
    networks:
      - relink-network
    depends_on:
      - ollama
      - chromadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  relink:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: relink
        SERVICE_PORT: 8003
    container_name: relink-service
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=relink
      - SERVICE_PORT=8003
      - DEBUG=true
    networks:
      - relink-network
    depends_on:
      - ollama
      - chromadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        SERVICE_NAME: backend
        SERVICE_PORT: 8004
    container_name: relink-backend
    ports:
      - "8004:8004"
    environment:
      - SERVICE_NAME=backend
      - SERVICE_PORT=8004
      - DEBUG=true
    networks:
      - relink-network
    depends_on:
      - ollama
      - chromadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  llm_tuning:
    build:
      context: ./llm_tuning
      dockerfile: ${DOCKERFILE:-Dockerfile.apple-silicon}
      args:
        SERVICE_NAME: llm_tuning
        SERVICE_PORT: 8005
    container_name: relink-llm-tuning
    ports:
      - "8005:8005"
    environment:
      - SERVICE_NAME=llm_tuning
      - SERVICE_PORT=8005
      - DEBUG=true
    networks:
      - relink-network
    depends_on:
      - ollama
      - chromadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üåê Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: relink-frontend
    ports:
      - "3000:3000"
    networks:
      - relink-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
  monitoring:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    container_name: relink-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - relink-network
    depends_on:
      - router
      - benchmark
      - relink
      - backend
      - llm_tuning
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  testing:
    build:
      context: ./testing
      dockerfile: Dockerfile
    container_name: relink-testing
    networks:
      - relink-network
    depends_on:
      - router
      - benchmark
      - relink
      - backend
      - llm_tuning
      - frontend
    environment:
      - SELENIUM_HUB_URL=http://selenium-hub:4444
      - TEST_ENVIRONMENT=docker
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://backend:8004/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

# üåê –°–µ—Ç–∏
networks:
  relink-network:
    driver: bridge

# üíæ –¢–æ–º–∞ –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
volumes:
  redis_data:
  ollama_data:
  chromadb_data: 