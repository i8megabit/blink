#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Qwen2.5 –¥–ª—è Mac M4
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: $(date)

set -e

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Qwen2.5 –¥–ª—è Mac M4"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Ollama
check_ollama() {
    if ! command -v ollama &> /dev/null; then
        log_error "Ollama –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama: https://ollama.ai"
        exit 1
    fi
    log_success "Ollama –Ω–∞–π–¥–µ–Ω: $(ollama --version)"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
check_system() {
    if [[ $(uname -m) == "arm64" ]]; then
        log_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω Apple Silicon"
        if [[ $(sysctl -n machdep.cpu.brand_string) == *"M4"* ]]; then
            log_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω Mac M4 - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"
        else
            log_warning "Apple Silicon –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –Ω–æ –Ω–µ M4. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π"
        fi
    else
        log_warning "–ù–µ Apple Silicon. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
create_model() {
    local model_name=$1
    local modelfile_path=$2
    local description=$3
    
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏: $model_name"
    log_info "–û–ø–∏—Å–∞–Ω–∏–µ: $description"
    
    if [ -f "$modelfile_path" ]; then
        log_info "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Modelfile: $modelfile_path"
        ollama create "$model_name" -f "$modelfile_path"
    else
        log_error "Modelfile –Ω–µ –Ω–∞–π–¥–µ–Ω: $modelfile_path"
        return 1
    fi
    
    if [ $? -eq 0 ]; then
        log_success "–ú–æ–¥–µ–ª—å $model_name —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏ $model_name"
        return 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
test_model() {
    local model_name=$1
    local test_prompt="–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? –û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ."
    
    log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏: $model_name"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏
    if ollama list | grep -q "$model_name"; then
        log_success "–ú–æ–¥–µ–ª—å $model_name –¥–æ—Å—Ç—É–ø–Ω–∞"
        
        # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
        log_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞..."
        response=$(ollama run "$model_name" "$test_prompt" --timeout 30s 2>/dev/null || echo "–¢–µ—Å—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω")
        
        if [[ $response != "–¢–µ—Å—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω" ]]; then
            log_success "–ú–æ–¥–µ–ª—å $model_name —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        else
            log_warning "–ú–æ–¥–µ–ª—å $model_name —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ —Ç–µ—Å—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω"
        fi
    else
        log_error "–ú–æ–¥–µ–ª—å $model_name –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_ollama
    check_system
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
    models=(
        "qwen2.5-7b-instruct-turbo:latest|ollama_models/qwen2.5-7b-instruct-turbo.Modelfile|–ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è M4"
        "qwen2.5-7b-instruct-turbo-q4km:latest|ollama_models/qwen2.5-7b-instruct-turbo-q4km.Modelfile|Q4_K_M –∫–≤–∞–Ω—Ç–∏–∑–∞—Ü–∏—è - –ª—É—á—à–∏–π –±–∞–ª–∞–Ω—Å –∫–∞—á–µ—Å—Ç–≤–æ/–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
        "qwen2.5-7b-instruct-turbo-q5km:latest|ollama_models/qwen2.5-7b-instruct-turbo-q5km.Modelfile|Q5_K_M –∫–≤–∞–Ω—Ç–∏–∑–∞—Ü–∏—è - –≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å"
        "qwen2.5-7b-instruct-turbo-neural:latest|ollama_models/qwen2.5-7b-instruct-turbo-neural.Modelfile|–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ Neural Engine"
        "qwen2.5-7b-instruct-turbo-ultra:latest|ollama_models/qwen2.5-7b-instruct-turbo-ultra.Modelfile|–£–ª—å—Ç—Ä–∞-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
        "qwen2.5-7b-instruct-turbo-code:latest|ollama_models/qwen2.5-7b-instruct-turbo-code.Modelfile|–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    )
    
    successful_models=()
    failed_models=()
    
    for model_info in "${models[@]}"; do
        IFS='|' read -r model_name modelfile_path description <<< "$model_info"
        
        if create_model "$model_name" "$modelfile_path" "$description"; then
            successful_models+=("$model_name")
            test_model "$model_name"
        else
            failed_models+=("$model_name")
        fi
        
        echo ""
    done
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    echo "=================================================="
    log_info "–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢"
    echo "=================================================="
    
    if [ ${#successful_models[@]} -gt 0 ]; then
        log_success "–£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ (${#successful_models[@]}):"
        for model in "${successful_models[@]}"; do
            echo "  ‚úÖ $model"
        done
    fi
    
    if [ ${#failed_models[@]} -gt 0 ]; then
        log_error "–ù–µ—É–¥–∞—á–Ω—ã–µ –º–æ–¥–µ–ª–∏ (${#failed_models[@]}):"
        for model in "${failed_models[@]}"; do
            echo "  ‚ùå $model"
        done
    fi
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
    echo ""
    log_info "–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:"
    echo "=================================================="
    echo "1. qwen2.5-7b-instruct-turbo-q4km - –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á (–†–ï–ö–û–ú–ï–ù–î–£–ï–ú–ê–Ø)"
    echo "2. qwen2.5-7b-instruct-turbo-q5km - –¥–ª—è –∑–∞–¥–∞—á —Ç—Ä–µ–±—É—é—â–∏—Ö –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏"
    echo "3. qwen2.5-7b-instruct-turbo-neural - –¥–ª—è AI-–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á"
    echo "4. qwen2.5-7b-instruct-turbo-ultra - –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    echo "5. qwen2.5-7b-instruct-turbo-code - –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    echo "6. qwen2.5-7b-instruct-turbo - –±–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
    echo "  ollama run qwen2.5-7b-instruct-turbo-q4km"
    echo "  ollama run qwen2.5-7b-instruct-turbo-q5km"
    echo "  ollama run qwen2.5-7b-instruct-turbo-neural"
    echo "  ollama run qwen2.5-7b-instruct-turbo-ultra"
    echo "  ollama run qwen2.5-7b-instruct-turbo-code"
    
    log_success "–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 