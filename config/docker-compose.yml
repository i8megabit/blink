services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - OLLAMA_URL=http://ollama:11434/api/generate
      - OLLAMA_MODEL=qwen2.5:7b-instruct-turbo
      - DB_HOST=db
      - DB_USER=seo_user
      - DB_PASSWORD=seo_pass
      - DB_NAME=seo_db
    deploy:
      resources:
        limits:
          cpus: '1.391'
          memory: 1734M
        reservations:
          cpus: '0.695'
          memory: 867M
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/v1/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - db
      - ollama

  docs:
    build:
      context: ../docs
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CACHE_TTL=3600
      - CACHE_PREFIX=docs_
      - DOCS_PATH=/app/static
      - VERSION_FILE=/app/VERSION
      - README_FILE=/app/README.md
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
    deploy:
      resources:
        limits:
          cpus: '0.347'
          memory: 433M
        reservations:
          cpus: '0.173'
          memory: 216M
    volumes:
      - ./VERSION:/app/VERSION:ro
      - ./README.md:/app/README.md:ro
      - ./TECHNICAL_ROADMAP.md:/app/static/TECHNICAL_ROADMAP.md:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/api/v1/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis

#  monitoring:
#    build:
#      context: .
#      dockerfile: monitoring/Dockerfile
#    ports:
#      - "8002:8002"
#    environment:
#      - PYTHONUNBUFFERED=1
#      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
#      - REDIS_HOST=redis
#      - REDIS_PORT=6379
#      - REDIS_DB=0
#      - OLLAMA_URL=http://ollama:11434
#      - CACHE_TTL=3600
#      - CACHE_PREFIX=monitoring_
#      - COLLECT_INTERVAL=30
#      - RETENTION_DAYS=30
#      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
#      - LOG_LEVEL=INFO
#      - LOG_FORMAT=json
#    deploy:
#      resources:
#        limits:
#          cpus: '0.347'
#          memory: 867M
#        reservations:
#          cpus: '0.173'
#          memory: 433M
#    healthcheck:
#      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8002/health')"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 40s
#    depends_on:
#      - redis
#      - db
#      - ollama

  testing:
    build:
      context: ../testing
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - CACHE_TTL=3600
      - CACHE_PREFIX=testing_
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - MAX_CONCURRENT_TESTS=10
      - TEST_TIMEOUT=300
      - REPORT_RETENTION_DAYS=30
      - METRICS_ENABLED=true
      - PROMETHEUS_PORT=9090
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    deploy:
      resources:
        limits:
          cpus: '0.695'
          memory: 867M
        reservations:
          cpus: '0.347'
          memory: 433M
    volumes:
      - ./testing/reports:/app/reports
      - ./testing/test_data:/app/test_data
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8003/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - db
      - prometheus

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    deploy:
      resources:
        limits:
          cpus: '0.695'
          memory: 867M
        reservations:
          cpus: '0.347'
          memory: 433M
    depends_on:
      - backend
      - docs
      # - monitoring
      - testing

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.347'
          memory: 433M
        reservations:
          cpus: '0.173'
          memory: 216M
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=seo_user
      - POSTGRES_PASSWORD=seo_pass
      - POSTGRES_DB=seo_db
    deploy:
      resources:
        limits:
          cpus: '0.695'
          memory: 867M
        reservations:
          cpus: '0.347'
          memory: 433M
    volumes:
      - ../data/relink_db:/var/lib/postgresql/data

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    deploy:
      resources:
        limits:
          cpus: '1.391'
          memory: 5204M
        reservations:
          cpus: '0.695'
          memory: 2602M
    volumes:
      - ../data/ollama_models:/root/.ollama
      - ./scripts:/scripts
    environment:
      # üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –î–õ–Ø APPLE M4
      - OLLAMA_KEEP_ALIVE=2h
      - OLLAMA_REQUEST_TIMEOUT=300s
      - OLLAMA_MAX_LOADED_MODELS=2
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_MAX_QUEUE=4
      - OLLAMA_CONCURRENT_REQUESTS=2
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=*
      - OLLAMA_LOAD_TIMEOUT=120s
      - OLLAMA_RUNNER_TIMEOUT=300s
      - OLLAMA_MODELS=/root/.ollama/models
      - OLLAMA_DEBUG=0
      
      # üéØ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ö–û–ù–¢–ï–ö–°–¢–ê –ò –ë–ê–¢–ß–ò–ù–ì–ê
      - OLLAMA_MAX_TOKENS=4096
      - OLLAMA_CONTEXT_LENGTH=4096
      - OLLAMA_BATCH_SIZE=512
      - OLLAMA_TEMPERATURE=0.7
      - OLLAMA_TOP_P=0.9
      - OLLAMA_REPEAT_PENALTY=1.1
      - OLLAMA_SEED=42
      
      # üî• –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ –î–õ–Ø APPLE M4 –ö–û–ù–¢–ï–ô–ù–ï–†
      - OLLAMA_FLASH_ATTENTION=1        # CPU Flash Attention –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
      - OLLAMA_KV_CACHE_TYPE=q8_0       # –ö–≤–∞–Ω—Ç–æ–≤–∞–Ω–Ω—ã–π –∫—ç—à –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏
      - OLLAMA_COMPUTE_UNIT_LIMIT=0     # –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü
      - OLLAMA_CPU_OPTIMIZATION=1       # –í–∫–ª—é—á–∞–µ–º CPU –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      - OLLAMA_SIMD_ACCELERATION=1      # SIMD —É—Å–∫–æ—Ä–µ–Ω–∏–µ –¥–ª—è ARM64
      - OLLAMA_NEON_OPTIMIZATION=1      # ARM NEON –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      
      # ‚ö° CPU –¢–£–†–ë–û-–†–ï–ñ–ò–ú –¥–ª—è Apple Silicon
      - OLLAMA_THREADS=8                # –ú–∞–∫—Å–∏–º—É–º –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è M4
      - OLLAMA_CPU_AFFINITY=0-7         # –ü—Ä–∏–≤—è–∑–∫–∞ –∫ Performance —è–¥—Ä–∞–º
      - OLLAMA_PREFER_CPU=true          # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU
      - OLLAMA_ARM64_OPTIMIZED=1        # ARM64 —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      
      # üß† –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–ê–ú–Ø–¢–ò –¥–ª—è M4
      - OLLAMA_LOW_MEM=false            # –ù–µ —ç–∫–æ–Ω–æ–º–∏–º –ø–∞–º—è—Ç—å - —É M4 –µ—ë –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ
      - OLLAMA_MEM_FRACTION=0.85        # 85% –ø–∞–º—è—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –º–æ–¥–µ–ª–∏
      - OLLAMA_MMAP_ENABLED=1           # Memory mapping –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
      - OLLAMA_HUGE_PAGES=1             # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª—å—à–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–∞–º—è—Ç–∏
      
      - OLLAMA_PRELOAD_MODEL=qwen2.5:7b-instruct-turbo
      - OLLAMA_WORKERS=2
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "ollama serve & 
      sleep 45 && 
      echo 'üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...' && 
      ollama pull qwen2.5:7b && 
      ollama pull qwen2.5:7b-instruct && 
      ollama pull qwen2.5:7b-instruct-turbo && 
      echo '‚úÖ –ú–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!' && 
      wait"

#  llm_tuning:
#    build:
#      context: .
#      dockerfile: llm_tuning/Dockerfile
#    ports:
#      - "8004:8004"
#    environment:
#      - PYTHONUNBUFFERED=1
#      - DATABASE_URL=postgresql+asyncpg://seo_user:seo_pass@db:5432/seo_db
#      - REDIS_HOST=redis
#      - REDIS_PORT=6379
#      - REDIS_DB=2
#      - OLLAMA_URL=http://ollama:11434
#      - CACHE_TTL=3600
#      - CACHE_PREFIX=llm_tuning
#      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
#      - LOG_LEVEL=INFO
#      - LOG_FORMAT=json
#      - MAX_CONCURRENT_TUNINGS=3
#      - TUNING_TIMEOUT=1800
#      - MODEL_RETENTION_DAYS=7
#      - METRICS_ENABLED=true
#      - PROMETHEUS_PORT=9091
#    deploy:
#      resources:
#        limits:
#          cpus: '2.086'
#          memory: 3469M
#        reservations:
#          cpus: '1.043'
#          memory: 1734M
#    volumes:
#      - ./llm_tuning/models:/app/models
#      - ./llm_tuning/data:/app/data
#    healthcheck:
#      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8004/health')"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 40s
#    depends_on:
#      - redis
#      - db
#      - ollama

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

#  jaeger:
#    image: jaegertracing/all-in-one:1.41
#    ports:
#      - "6831:6831/udp"
#      - "16686:16686"
#    environment:
#      - COLLECTOR_ZIPKIN_HOST_PORT=9411
#    deploy:
#      resources:
#        limits:
#          cpus: '0.347'
#          memory: 433M
#        reservations:
#          cpus: '0.173'
#          memory: 216M

volumes:
  redis_data:
  prometheus_data:
