import React from 'react'

function OllamaStatus({ status, onRefresh }) {
  const getStatusColor = () => {
    if (status.ready_for_work) return 'status-success'
    if (status.server_available) return 'status-warning'
    return 'status-error'
  }

  const getStatusText = () => {
    if (status.ready_for_work) return '–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ'
    if (status.server_available) return '–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω'
    return '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'
  }

  const getStatusIcon = () => {
    if (status.ready_for_work) return '‚úÖ'
    if (status.server_available) return '‚ö†Ô∏è'
    return '‚ùå'
  }

  return (
    <div className="space-y-4">
      {/* –û—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—É—Å */}
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-3">
          <div className={`status-indicator ${getStatusColor()}`}>
            <span>{getStatusIcon()}</span>
            {getStatusText()}
          </div>
        </div>
        
        <button 
          className="btn btn-ghost btn-sm"
          onClick={onRefresh}
        >
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å
        </button>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="card">
          <div className="card-header">
            <div className="card-title">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ</div>
          </div>
          <div className="space-y-2">
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted">–°–µ—Ä–≤–µ—Ä:</span>
              <span className={`text-sm ${status.server_available ? 'text-green-500' : 'text-red-500'}`}>
                {status.server_available ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
              </span>
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted">–ú–æ–¥–µ–ª—å:</span>
              <span className={`text-sm ${status.model_loaded ? 'text-green-500' : 'text-yellow-500'}`}>
                {status.model_loaded ? '–ó–∞–≥—Ä—É–∂–µ–Ω–∞' : '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...'}
              </span>
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted">–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:</span>
              <span className={`text-sm ${status.ready_for_work ? 'text-green-500' : 'text-yellow-500'}`}>
                {status.ready_for_work ? '–ì–æ—Ç–æ–≤' : '–ù–µ –≥–æ—Ç–æ–≤'}
              </span>
            </div>
          </div>
        </div>

        <div className="card">
          <div className="card-header">
            <div className="card-title">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
          </div>
          <div className="space-y-2">
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted">–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞:</span>
              <span className="text-sm text-muted">
                {status.last_check ? new Date(status.last_check).toLocaleTimeString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
              </span>
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted">–ú–æ–¥–µ–ª–µ–π:</span>
              <span className="text-sm text-muted">
                {status.models_count || 0}
              </span>
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted">–°—Ç–∞—Ç—É—Å:</span>
              <span className="text-sm text-muted">
                {status.connection || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ */}
      {status.message && (
        <div className="card">
          <div className="text-sm text-muted">
            {status.message}
          </div>
        </div>
      )}

      {/* –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ */}
      {status.available_models && status.available_models.length > 0 && (
        <div className="card">
          <div className="card-header">
            <div className="card-title">–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏</div>
          </div>
          <div className="space-y-2">
            {status.available_models.slice(0, 5).map((model, index) => (
              <div key={index} className="flex items-center gap-2 text-sm">
                <span className="text-muted">ü§ñ</span>
                <span className="text-primary">{model}</span>
              </div>
            ))}
            {status.available_models.length > 5 && (
              <div className="text-sm text-muted">
                ... –∏ –µ—â–µ {status.available_models.length - 5} –º–æ–¥–µ–ª–µ–π
              </div>
            )}
          </div>
        </div>
      )}

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      {!status.ready_for_work && (
        <div className="card bg-yellow-900/20 border-yellow-500/30">
          <div className="flex items-start gap-3">
            <div className="text-yellow-500 text-lg">üí°</div>
            <div>
              <div className="font-medium text-yellow-100 mb-1">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</div>
              <div className="text-sm text-yellow-200 space-y-1">
                {!status.server_available && (
                  <div>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Ollama –∑–∞–ø—É—â–µ–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞</div>
                )}
                {status.server_available && !status.model_loaded && (
                  <div>‚Ä¢ –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –µ—ë –≤—Ä—É—á–Ω—É—é</div>
                )}
                <div>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –º–æ–¥–µ–ª–∏</div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default OllamaStatus 