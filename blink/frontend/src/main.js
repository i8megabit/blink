// –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è Vite
console.log('üöÄ Blink (Vite) - –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω!');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
  console.log('üì± DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Feather Icons
  if (window.feather) {
    feather.replace();
  }
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  checkOllamaStatus();
  loadDomains();
  loadAnalysisHistory();
  loadBenchmarkHistory();
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Ollama
async function checkOllamaStatus() {
  const statusElement = document.getElementById('ollama-status');
  if (!statusElement) return;
  
  try {
    const response = await fetch('http://localhost:8000/api/v1/ollama_status');
    const data = await response.json();
    
    if (data.ready_for_work) {
      statusElement.className = 'status-indicator status-success';
      statusElement.innerHTML = `
        <i data-feather="check-circle"></i>
        Ollama: –ì–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ (${data.models_count} –º–æ–¥–µ–ª–µ–π)
      `;
    } else {
      statusElement.className = 'status-indicator status-warning';
      statusElement.innerHTML = `
        <i data-feather="alert-circle"></i>
        Ollama: ${data.message || '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}
      `;
    }
    feather.replace();
  } catch (error) {
    statusElement.className = 'status-indicator status-error';
    statusElement.innerHTML = `
      <i data-feather="x-circle"></i>
      Ollama: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    `;
    feather.replace();
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–º–µ–Ω–æ–≤
async function loadDomains() {
  const container = document.getElementById('domains-container');
  if (!container) return;
  
  try {
    const response = await fetch('http://localhost:8000/api/v1/domains');
    const data = await response.json();
    
    if (data.domains && data.domains.length > 0) {
      const domainsHtml = data.domains.map(domain => `
        <div class="domain-card">
          <div class="domain-name">${domain.name}</div>
          <div class="domain-stats">
            <div class="stat-item">
              <i data-feather="file-text"></i>
              ${domain.total_posts} —Å—Ç–∞—Ç–µ–π
            </div>
            <div class="stat-item">
              <i data-feather="bar-chart-2"></i>
              ${domain.total_analyses} –∞–Ω–∞–ª–∏–∑–æ–≤
            </div>
            <div class="stat-item">
              <i data-feather="clock"></i>
              ${domain.updated_at ? new Date(domain.updated_at).toLocaleString('ru-RU') : '–ù–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è'}
            </div>
          </div>
        </div>
      `).join('');
      container.innerHTML = domainsHtml;
    } else {
      container.innerHTML = `
        <div class="status-indicator status-warning">
          <i data-feather="alert-circle"></i>
          –î–æ–º–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
        </div>
      `;
    }
    feather.replace();
  } catch (error) {
    container.innerHTML = `
      <div class="status-indicator status-error">
        <i data-feather="x-circle"></i>
        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–º–µ–Ω–æ–≤
      </div>
    `;
    feather.replace();
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∞–Ω–∞–ª–∏–∑–æ–≤
async function loadAnalysisHistory() {
  const container = document.getElementById('analysis-history');
  if (!container) return;
  
  try {
    const response = await fetch('http://localhost:8000/api/v1/analysis_history');
    const data = await response.json();
    
    if (data.history && data.history.length > 0) {
      const historyHtml = data.history.slice(0, 5).map(analysis => `
        <div class="domain-card">
          <div class="domain-name">–ê–Ω–∞–ª–∏–∑ #${analysis.id}</div>
          <div class="domain-stats">
            <div class="stat-item">
              <i data-feather="file-text"></i>
              ${analysis.posts_analyzed} —Å—Ç–∞—Ç–µ–π
            </div>
            <div class="stat-item">
              <i data-feather="link"></i>
              ${analysis.connections_found} —Å–≤—è–∑–µ–π
            </div>
            <div class="stat-item">
              <i data-feather="clock"></i>
              ${new Date(analysis.created_at).toLocaleString('ru-RU')}
            </div>
          </div>
        </div>
      `).join('');
      container.innerHTML = historyHtml;
    } else {
      container.innerHTML = `
        <div class="status-indicator status-warning">
          <i data-feather="alert-circle"></i>
          –ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –ø—É—Å—Ç–∞
        </div>
      `;
    }
    feather.replace();
  } catch (error) {
    container.innerHTML = `
      <div class="status-indicator status-error">
        <i data-feather="x-circle"></i>
        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
      </div>
    `;
    feather.replace();
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
async function loadBenchmarkHistory() {
  const container = document.getElementById('benchmark-history');
  if (!container) return;
  
  try {
    const response = await fetch('http://localhost:8000/api/v1/benchmark_history');
    const data = await response.json();
    
    if (data.benchmarks && data.benchmarks.length > 0) {
      const benchmarksHtml = data.benchmarks.slice(0, 5).map(benchmark => `
        <div class="domain-card">
          <div class="domain-name">${benchmark.name}</div>
          <div class="domain-stats">
            <div class="stat-item">
              <i data-feather="activity"></i>
              ${benchmark.benchmark_type}
            </div>
            <div class="stat-item">
              <i data-feather="award"></i>
              ${benchmark.overall_score ? benchmark.overall_score.toFixed(2) : 'N/A'}
            </div>
            <div class="stat-item">
              <i data-feather="clock"></i>
              ${new Date(benchmark.created_at).toLocaleString('ru-RU')}
            </div>
          </div>
        </div>
      `).join('');
      container.innerHTML = benchmarksHtml;
    } else {
      container.innerHTML = `
        <div class="status-indicator status-warning">
          <i data-feather="alert-circle"></i>
          –ò—Å—Ç–æ—Ä–∏—è –±–µ–Ω—á–º–∞—Ä–∫–æ–≤ –ø—É—Å—Ç–∞
        </div>
      `;
    }
    feather.replace();
  } catch (error) {
    container.innerHTML = `
      <div class="status-indicator status-error">
        <i data-feather="x-circle"></i>
        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
      </div>
    `;
    feather.replace();
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.checkOllamaStatus = checkOllamaStatus;
window.loadDomains = loadDomains;
window.loadAnalysisHistory = loadAnalysisHistory;
window.loadBenchmarkHistory = loadBenchmarkHistory;