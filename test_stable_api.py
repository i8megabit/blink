#!/usr/bin/env python3
"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π."""

import asyncio
import json
import httpx
from datetime import datetime

async def test_stable_recommendations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."""
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∞
    BACKEND_URL = "http://localhost:8000"
    TEST_DOMAIN = "example.com"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
    print("=" * 60)
    
    async with httpx.AsyncClient(timeout=300.0) as client:
        
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Ollama
        print("üîç 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Ollama...")
        try:
            response = await client.get(f"{BACKEND_URL}/api/v1/ollama_status")
            if response.status_code == 200:
                status = response.json()
                print(f"   ‚úÖ Ollama —Å—Ç–∞—Ç—É—Å: {status.get('status', 'unknown')}")
                print(f"   üìã –ú–æ–¥–µ–ª—å: {status.get('model_name', 'unknown')}")
                print(f"   üöÄ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ: {status.get('ready_for_work', False)}")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
                return
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±—ç–∫–µ–Ω–¥—É: {e}")
            return
        
        # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –¥–æ–º–µ–Ω–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        print(f"\nüîç 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –¥–æ–º–µ–Ω–∞ {TEST_DOMAIN}...")
        try:
            response = await client.get(f"{BACKEND_URL}/api/v1/domains")
            if response.status_code == 200:
                domains = response.json()
                domain_found = False
                for domain in domains:
                    if domain['name'] == TEST_DOMAIN:
                        domain_found = True
                        print(f"   ‚úÖ –î–æ–º–µ–Ω –Ω–∞–π–¥–µ–Ω: {domain['total_posts']} —Å—Ç–∞—Ç–µ–π –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–æ")
                        break
                
                if not domain_found:
                    print(f"   ‚ö†Ô∏è –î–æ–º–µ–Ω {TEST_DOMAIN} –Ω–µ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω")
                    print(f"   üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ POST /api/v1/wp_index –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏")
                    return
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–º–µ–Ω–æ–≤: {response.status_code}")
                return
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–æ–≤: {e}")
            return
        
        # 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        print(f"\nüöÄ 3. –ó–∞–ø—É—Å–∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è {TEST_DOMAIN}...")
        
        start_time = datetime.now()
        
        try:
            response = await client.post(
                f"{BACKEND_URL}/api/v1/wp_stable",
                json={
                    "domain": TEST_DOMAIN,
                    "client_id": f"test_{int(start_time.timestamp())}"
                },
                timeout=300.0  # 5 –º–∏–Ω—É—Ç
            )
            
            end_time = datetime.now()
            duration = (end_time - start_time).total_seconds()
            
            if response.status_code == 200:
                result = response.json()
                recommendations = result.get('recommendations', [])
                
                print(f"   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {duration:.1f} —Å–µ–∫—É–Ω–¥")
                print(f"   üìä –ü–æ–ª—É—á–µ–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(recommendations)}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                if recommendations:
                    print(f"\n   üìã –ü–µ—Ä–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
                    for i, rec in enumerate(recommendations[:3], 1):
                        print(f"   {i}. {rec.get('anchor', '–ë–µ–∑ –∞–Ω–∫–æ—Ä–∞')}")
                        print(f"      üîó {rec.get('from', 'N/A')} -> {rec.get('to', 'N/A')}")
                        print(f"      üí≠ {rec.get('comment', '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è')[:100]}...")
                        print()
                else:
                    print("   ‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã")
                
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {response.status_code}")
                try:
                    error_detail = response.json()
                    print(f"   üìã –î–µ—Ç–∞–ª–∏: {error_detail}")
                except:
                    print(f"   üìã –û—Ç–≤–µ—Ç: {response.text[:200]}...")
                
        except httpx.TimeoutException:
            print(f"   ‚è∞ –¢–∞–π–º–∞—É—Ç –ø–æ—Å–ª–µ 5 –º–∏–Ω—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
    
    print("\n" + "=" * 60)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    asyncio.run(test_stable_recommendations()) 